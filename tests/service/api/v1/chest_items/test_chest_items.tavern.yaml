---
test_name: Make sure server implements crud functionality for chest items endpoint (The n:m relation between chests and items)

includes:
  - !include common.yaml
  - !include ../chest/chest_stage.yaml
  - !include ../item/item_stage.yaml

stages:
  # Create a chest and an item
  - type: ref
    id: create_chest
  - type: ref
    id: create_item

  # Add the item to the chest
  - name: Add item to chest
    request:
      url: http://{tavern.env_vars.API_SERVER}:{tavern.env_vars.API_PORT}/v1/chests/{chest_id}/items
      json:
        item_id: '{item_id:d}'
        anzahl: '{item_anzahl:d}'
      method: POST
    response:
      status_code: 201
      json:
        item_id: !int '{item_id:d}'
        anzahl: !int '{item_anzahl:d}'
      save:
        json:
          item_id: item_id
          item_anzahl: anzahl

  # Get all items from the chest
  - name: Get all chest items
    request:
      url: http://{tavern.env_vars.API_SERVER}:{tavern.env_vars.API_PORT}/v1/chests/{chest_id}/items
      method: GET
    response:
      status_code: 200
      json:
        id: !int '{chest_id:d}'
        name: '{chest_name:s}'
        items:
          - item_id: !int '{item_id:d}'
            anzahl: !int '{item_anzahl:d}'
            kiste_id: !int '{chest_id:d}'

  # Remove the item from the chest
  - name: Remove item from chest
    request:
      url: http://{tavern.env_vars.API_SERVER}:{tavern.env_vars.API_PORT}/v1/chests/{chest_id}/items/{item_id}
      method: DELETE
    response:
      status_code: 204

  # ---- Delete the chest and the item
  - type: ref
    id: delete_chest
  - type: ref
    id: delete_item
